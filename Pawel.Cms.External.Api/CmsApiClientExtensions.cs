// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Pawel.Cms.External.Api
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SwaggerSample.
    /// </summary>
    public static partial class CmsApiClientExtensions
    {
            /// <summary>
            /// Get All books
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IList<BookDTO> ApiBooksGet(this ICmsApiClient operations)
            {
                return operations.ApiBooksGetAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get All books
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<BookDTO>> ApiBooksGetAsync(this ICmsApiClient operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiBooksGetWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// POST api/books
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='model'>
            /// </param>
            public static void ApiBooksPost(this ICmsApiClient operations, BookDTO model = default(BookDTO))
            {
                operations.ApiBooksPostAsync(model).GetAwaiter().GetResult();
            }

            /// <summary>
            /// POST api/books
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='model'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiBooksPostAsync(this ICmsApiClient operations, BookDTO model = default(BookDTO), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiBooksPostWithHttpMessagesAsync(model, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Metoda zwracajaca książke o podanym ID
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static BookDTO ApiBooksByIdGet(this ICmsApiClient operations, int id)
            {
                return operations.ApiBooksByIdGetAsync(id).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Metoda zwracajaca książke o podanym ID
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<BookDTO> ApiBooksByIdGetAsync(this ICmsApiClient operations, int id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiBooksByIdGetWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

        /// <summary>
        /// PUT api/books/5
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='model'>
        /// </param>
        public static void ApiBooksPut(this ICmsApiClient operations, BookDTO model = default(BookDTO))
        {
            operations.ApiBooksPutAsync(model).GetAwaiter().GetResult();
        }

        /// <summary>
        /// PUT api/books/5
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='model'>
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async Task ApiBooksPutAsync(this ICmsApiClient operations, BookDTO model = default(BookDTO), CancellationToken cancellationToken = default(CancellationToken))
        {
            (await operations.ApiBooksPutWithHttpMessagesAsync(model, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// DELETE api/books/5
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='id'>
        /// </param>
        public static void ApiBooksByIdDelete(this ICmsApiClient operations, int id)
            {
                operations.ApiBooksByIdDeleteAsync(id).GetAwaiter().GetResult();
            }

            /// <summary>
            /// DELETE api/books/5
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiBooksByIdDeleteAsync(this ICmsApiClient operations, int id, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiBooksByIdDeleteWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
